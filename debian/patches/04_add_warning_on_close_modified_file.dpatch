#!/bin/sh -e
##  by Goedson Teixeira Paixao <goedson@debian.org>
##
## DP: Offers to save when closing modified file

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

case "$1" in
       -patch) patch $patch_opts -p1 < $0;;
       -unpatch) patch $patch_opts -p1 -R < $0;;
        *)
                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
                exit 1;;
esac

exit 0

@DPATCH@
diff -ur gpaint-0.2.3/src/callbacks.c new-gpaint/src/callbacks.c
--- gpaint-0.2.3/src/callbacks.c	2002-11-12 07:24:33.000000000 -0200
+++ new-gpaint/src/callbacks.c	2003-01-16 20:04:49.000000000 -0200
@@ -32,8 +32,10 @@
 {
     image_buf *ibuf = widget_get_image(widget);
     g_assert(ibuf);
-    close_image_buf(ibuf);
-    return FALSE;
+    if (close_image_buf(ibuf))
+		return FALSE;
+	else
+		return TRUE;
 }
 
 
@@ -61,6 +63,7 @@
                                         gpointer         user_data)
 {
     image_buf *ibuf = widget_get_image(GTK_WIDGET(menuitem));
+    ibuf->close_on_save = 0;
     BEGIN_BUSY_CURSOR
     save_canvas(widget_get_image(GTK_WIDGET(menuitem)), 0);
     END_BUSY_CURSOR
@@ -72,6 +75,7 @@
                                         gpointer         user_data)
 {
     image_buf *ibuf = widget_get_image(GTK_WIDGET(menuitem));
+    ibuf->close_on_save = 0;
     BEGIN_BUSY_CURSOR
     save_canvas(widget_get_image(GTK_WIDGET(menuitem)), 1);
     END_BUSY_CURSOR
@@ -547,6 +551,7 @@
                                         gpointer         user_data)
 {
     image_buf *ibuf = widget_get_image(GTK_WIDGET(button));
+    ibuf->close_on_save = 0;
     BEGIN_BUSY_CURSOR
     save_canvas(widget_get_image(GTK_WIDGET(button)), 0);
     END_BUSY_CURSOR
@@ -558,6 +563,7 @@
                                         gpointer         user_data)
 {
     image_buf *ibuf = widget_get_image(GTK_WIDGET(button));
+    ibuf->close_on_save = 0;
     BEGIN_BUSY_CURSOR
     save_canvas(widget_get_image(GTK_WIDGET(button)), 1);
     END_BUSY_CURSOR
diff -ur gpaint-0.2.3/src/image_buf.c new-gpaint/src/image_buf.c
--- gpaint-0.2.3/src/image_buf.c	2002-11-14 05:59:49.000000000 -0200
+++ new-gpaint/src/image_buf.c	2003-01-16 20:04:49.000000000 -0200
@@ -102,6 +102,7 @@
     ibuf->timer = 0;
     ibuf->flash_state = 0;
     ibuf->modified = 0;
+    ibuf->close_on_save = 0;
 
     memset(ibuf->textbuf, 0, sizeof(ibuf->textbuf));
     if (ibuf->drawing_area)
@@ -253,12 +254,32 @@
     return ibuf;
 }
 
-void close_image_buf(image_buf *ibuf)
+gboolean close_image_buf(image_buf *ibuf)
 {
+    GtkWidget *dialog;
+	gint result;
     image_buf *t = g_hash_table_lookup(images, ibuf->name);
     g_assert(t == ibuf);
 
-
+    if (ibuf->modified) {
+      dialog = gtk_message_dialog_new(GTK_WINDOW(ibuf->window), 
+				      GTK_DIALOG_MODAL, 
+				      GTK_MESSAGE_QUESTION, 
+				      GTK_BUTTONS_NONE, 
+				      _("Do you want to save the changes you made to \"%s\"?\nYour changes will be lost if you don't save them."), ibuf->name);
+	  gtk_dialog_add_button(GTK_DIALOG(dialog), GTK_STOCK_SAVE,GTK_RESPONSE_YES);
+	  gtk_dialog_add_button(GTK_DIALOG(dialog), GTK_STOCK_CANCEL,GTK_RESPONSE_CANCEL);
+	  gtk_dialog_add_button(GTK_DIALOG(dialog), GTK_STOCK_NO,GTK_RESPONSE_NO);
+      result = gtk_dialog_run(GTK_DIALOG(dialog));
+	  gtk_widget_destroy(GTK_WIDGET(dialog));
+      switch (result) {
+	  case GTK_RESPONSE_YES:
+	      ibuf->close_on_save = 1;
+	      return save_canvas(ibuf,0);
+      case GTK_RESPONSE_CANCEL:
+              return FALSE;
+      }
+    }
 
     g_hash_table_remove(images,  ibuf->name);
     if (ibuf->drawing_area)
@@ -275,6 +296,7 @@
     free_image_buf(ibuf);
     if (g_hash_table_size(images) == 0)
         gtk_exit(0);
+	return TRUE;
 }
 
 void image_buf_process_in_place(image_buf *ibuf, void (*f)(image_buf *, image_buf *))
diff -ur gpaint-0.2.3/src/image_buf.h new-gpaint/src/image_buf.h
--- gpaint-0.2.3/src/image_buf.h	2002-11-12 07:03:51.000000000 -0200
+++ new-gpaint/src/image_buf.h	2003-01-16 20:04:49.000000000 -0200
@@ -67,6 +67,7 @@
     int ptdiffy;
 
     int modified;
+	int close_on_save;
     int has_focus;
     int lx;
     int ly;
@@ -110,7 +111,7 @@
 image_buf *create_image_buf(const char *name, int width, int height);
 void image_buf_resize(image_buf *ibuf, int width, int height);
 
-void close_image_buf(image_buf *ibuf);
+gboolean close_image_buf(image_buf *ibuf);
 
 
 
diff -ur gpaint-0.2.3/src/util.c new-gpaint/src/util.c
--- gpaint-0.2.3/src/util.c	2002-11-14 06:08:20.000000000 -0200
+++ new-gpaint/src/util.c	2003-01-16 20:04:49.000000000 -0200
@@ -28,7 +28,7 @@
 
 #include "pixmaps.h"
 #include "clipboard.h"
-
+#include "image_buf.h"
 
 GdkCursor *busy_cursor = 0;
 GdkCursor *arrow_cursor = 0;
@@ -249,24 +249,32 @@
     gtk_widget_destroy(GTK_WIDGET(widget));
     PROCESSING_GTK_EVENTS;
     i = image_buf_save(ibuf, tmp);
-    if (i)
+    if (i) {
         image_buf_set_name(ibuf, tmp);
+	image_buf_set_modified(ibuf,0);
+	if (ibuf->close_on_save)
+	    close_image_buf(ibuf);
+    }
     else 
         gdk_beep(); /*show error message, TODO */
 }
 
-void save_canvas(image_buf *ibuf, int saveas)
+gboolean save_canvas(image_buf *ibuf, int saveas)
 {
 
     GtkWidget *widget ;
     if ((saveas == 0) && strncmp(ibuf->name, UNTITLED_NAME, strlen(UNTITLED_NAME)))
     {
-        if (image_buf_save(ibuf, ibuf->name))
-            ;
-        else
+      if (image_buf_save(ibuf, ibuf->name)) {
+	  image_buf_set_modified(ibuf,0);
+	  if (ibuf->close_on_save)
+	      close_image_buf(ibuf);
+	  return TRUE;
+      }
+      else{
             gdk_beep(); /*show error message, TODO */
-            
-        return ;
+            return FALSE;  
+      }
     }
 
     widget = gtk_file_selection_new("Save image");
@@ -289,7 +297,7 @@
                              GTK_OBJECT(widget));
 
     gtk_widget_show(widget);
-
+    return FALSE;
 }
 
 static void gtk_container_remove_callback(GtkWidget *widget, gpointer data)
diff -ur gpaint-0.2.3/src/util.h new-gpaint/src/util.h
--- gpaint-0.2.3/src/util.h	2002-11-03 07:51:30.000000000 -0200
+++ new-gpaint/src/util.h	2003-01-16 20:04:49.000000000 -0200
@@ -42,7 +42,7 @@
 
 void open_canvas(image_buf *ibuf);
 
-void save_canvas(image_buf *ibuf, int saveas);
+gboolean save_canvas(image_buf *ibuf, int saveas);
 
 
 void set_button_pixmap(GtkButton *button, unsigned char **pixmap);
