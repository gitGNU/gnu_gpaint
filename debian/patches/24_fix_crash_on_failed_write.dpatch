#! /bin/sh /usr/share/dpatch/dpatch-run
## 24_fix_crash_on_failed_write.dpatch by Goedson Teixeira Paixao <goedson@debian.org>
##
## DP: Checks if it is possible to save in the format choosen by the user
## DP: before trying to save.

@DPATCH@
diff -urNad gpaint~/src/drawing.c gpaint/src/drawing.c
--- gpaint~/src/drawing.c	2009-10-29 20:00:21.000000000 -0200
+++ gpaint/src/drawing.c	2009-10-29 22:50:32.925445266 -0200
@@ -262,7 +262,7 @@
                          (error && error->message) ? error->message : "");
         gtk_dialog_run(GTK_DIALOG(dialog));
         gtk_widget_destroy(GTK_WIDGET(dialog)); 
-        g_free(error);  /* allocated by gdk-pixbuf library */
+        g_error_free(error);  /* allocated by gdk-pixbuf library */
     }
     return saved;
 }
diff -urNad gpaint~/src/image.c gpaint/src/image.c
--- gpaint~/src/image.c	2009-10-29 20:00:21.000000000 -0200
+++ gpaint/src/image.c	2009-10-29 22:50:32.937443439 -0200
@@ -32,6 +32,7 @@
 #include <gdk/gdkx.h>  /* for gdk_root_parent */
 #include <gdk-pixbuf/gdk-pixbuf.h>
 
+#define _(String) gettext (String)
 
 static int cmp_int(const void *a, const void *b);
 static void fill_polygon(
@@ -191,13 +192,48 @@
     return image;
 }
 
+
+gboolean
+is_writable (GSList *formats, gchar *type)
+{
+    gboolean writable = FALSE;
+
+    while (!writable && formats != NULL)
+    {
+        gchar** extensions = gdk_pixbuf_format_get_extensions((GdkPixbufFormat *)(formats->data));
+        gchar** e = NULL;
+        for (e = extensions; *e; ++e)
+        {
+            if (!strcmp(*e, type))
+            {
+                writable = TRUE;
+                break;
+            }
+        }
+        g_strfreev (extensions);
+        formats = g_slist_next (formats);
+    }
+    return writable;
+}
+
+void add_if_writable (GdkPixbufFormat *data, GSList **list)
+{
+  if (gdk_pixbuf_format_is_writable (data))
+    *list = g_slist_prepend (*list, data);
+}
+
 int
 image_write(gpaint_image* image, const gchar* filename, GError **perror)
 {
     gboolean saved = FALSE;
     gchar *ext = NULL;
     gchar *type = NULL;
-    
+
+    GSList *formats = gdk_pixbuf_get_formats ();
+    GSList *writable_formats = NULL;
+    g_slist_foreach (formats, add_if_writable, &writable_formats);
+    g_slist_free (formats);
+
     ext = g_strrstr(filename, ".");
     if (!ext)
     {
@@ -214,13 +250,20 @@
     {
         type = g_ascii_strdown(ext+1,-1);
         debug1("type=[%s]",type);
-        saved = gdk_pixbuf_save(image->pixbuf, filename, type, perror, NULL);
+        if (is_writable (writable_formats, type))
+        {
+            saved = gdk_pixbuf_save(image->pixbuf, filename, type, perror, NULL);
+        } else {
+            saved = FALSE;
+            *perror = g_error_new (GDK_PIXBUF_ERROR, GDK_PIXBUF_ERROR_BAD_OPTION, _("Saving in the '%s' format is not supported by gdk_pixbuf"), type);
+        }
         g_free(type);
     }
     if (!saved && *perror)
     {
         g_warning("Could not save image %s: %s\n", filename, (*perror)->message);
-    }      
+    }
+	g_slist_free (writable_formats);
     return saved;
 }
 
